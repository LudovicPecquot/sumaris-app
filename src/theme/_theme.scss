// --------------------------------------------------
// Import SUMARiS themes variables
// --------------------------------------------------
@import "theme.globals";
// --------------------------------------------------
// Import ngx-components theme
// --------------------------------------------------
@import "@sumaris-net/ngx-components/src/theme/theme";
// --------------------------------------------------
// Import print style
// --------------------------------------------------
@import "print";

// --------------------------------------------------
// SUMARiS theme
// --------------------------------------------------
@import "mixins";

.mat-tab-fixed-content {
  .mat-tab-body-content {
    height: var(--mat-tab-body-content-height, 100%) !important;
    overflow: auto;
    & > .ng-star-inserted {
      height: var(--mat-tab-body-content-height, 100%);
    }
  }
}

mat-tab-group.mat-tab-disabled-visible .mat-tab-disabled {
  display: inherit;
}

/*ion-content.ion-flex-direction-column::part(scroll) {
  height: calc(100% - 2px);
}*/
ion-content.ion-flex-direction-column::part(scroll),
.ion-flex-direction-column {
  display: flex;
  flex-direction: column;
  height: 100%;
}
ion-content.ion-flex-direction-column::part(scroll) {
  height: calc(100% - 2px);
}

.ion-flex-fill,
.table-container {
  flex: 1 1 auto;
  overflow-y: auto;
}

.mat-table {
  .mat-row {
    overflow: hidden;
    /*FIXME not need anymore ?
    height: calc(min(var(--mat-row-max-height), 48px));
    */
  }

  .mat-row.mat-row-selected {
    .mat-cell .visible-selected-row {
      visibility: visible !important;
    }
  }

  .mat-header-row,
  .mat-row,
  .mat-footer-row {

    .mat-column-select {
      width: 50px; // Force to 50px, because sticky column must have fixed width
    }

    .mat-header-cell,
    .mat-cell,
    .mat-footer-cell {

      // Remove right border, of sticky columns
      &.mat-table-sticky-border-elem-left {
        border-right: 0 !important; // 1px solid #{$app-table-border-color};
      }
    }
  }

  .mat-header-row  .mat-header-cell {
    --mat-cell-overflow: hidden;

    &.mat-column-pmfm .mat-sort-header-content {
      max-width: 90%;
    }

    .pmfm-details {
      margin-top: 4px;
      font-size: 90% !important;
      max-width: 100%;
      overflow: var(--mat-cell-overflow);
    }

    /* Pour les navigateurs supportant la propriété line-clamp (WebKit, Blink et Firefox récent) */
    @supports (-webkit-line-clamp: 5) {
      .pmfm-details {
        display: -webkit-box;
        -webkit-line-clamp: 5; /* Affiche 3 lignes puis coupe si besoin avec '...' */
        -webkit-box-orient: vertical;

        &:hover {
          -webkit-line-clamp: 10;
        }
      }
    }
  }
}

mat-form-field {
  .mat-form-field-buttons {
    width: 100%;
    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start;
    align-items: center;

    .mat-form-field-button {
      --button-padding-end: 2px;
      --flex-basis: calc(100% / var(--buttons-col-count, 4) - var(--button-padding-end));
      flex: 0 1 var(--flex-basis);
      max-width: calc(min(var(--flex-basis), 150px));
      text-transform: capitalize; // Avoid uppercase text
      white-space: normal;
      box-sizing: content-box; // Avoid long text to be cropped
      margin: 0 !important;
      padding-inline-end: var(--button-padding-end) !important;
      padding-bottom: var(--button-padding-end) !important;
      height: 40px;
    }
  }

  .fab-button-small {
    margin: 0 5px;
  }

  .mat-form-field-suffix:has(.mat-form-field-suffix-container) {
    display: inline;
  }
  .mat-form-field-suffix-container {
    @extend .mat-form-field-suffix;
    display: inline;
  }
}

.mat-toolbar, .mat-toolbar-single-row {
  background-color: #{$mat-toolbar-background-color};
  height: var(--mat-toolbar-height);
}


// Smaller title on xxs device
@media screen and (max-width: $screen-xxs-max) {
  ion-toolbar ion-title {
    font-size: 16px;
    padding-inline: 0;
  }
}

// Smaller title on xs device
@media screen and (min-width: $screen-xs) and (max-width: $screen-xs-max)  {
  ion-toolbar ion-title {
    font-size: 18px;
    padding-inline: 6px;
  }
}

// Mobile: change form labels style
@media screen and (max-width: $screen-sm-max) {
  form ion-col > ion-label.ion-float-center, form ion-col > ion-label.ion-float-end {
    font-weight: bold;
  }
}

ion-toast {
  &.secondary {
    --background: var(--ion-color-secondary);
    --color: var(--ion-color-primary);
    --button-color: var(--ion-color-tertiary);
  }
}

// Form buttons bar
app-form-buttons-bar {
  // Default width of form bar left buttons
  --form-buttons-bar-buttons-width: 400px;
}

// Measurement form
@media screen and (max-width: $screen-sm-max) {
  .measurements-form-padding-start {
    /* Add offset = icon width (24px) + margin (2*5px) */
    padding-inline-start: 34px;
  }
}

.form-container,
form.form-container {
  mat-form-field {
    ion-icon[matPrefix],
    mat-icon[matPrefix],
    .mat-form-field-prefix ion-icon,
    .mat-form-field-prefix .mat-icon {
      color: rgba(0, 0, 0, 0.57);
      fill: rgba(0, 0, 0, 0.57);
    }

    &.mat-focused {
      ion-icon[matPrefix],
      mat-icon[matPrefix],
      .mat-form-field-prefix ion-icon,
      .mat-form-field-prefix .mat-icon {
        color: var(--ion-color-dark);
        fill: var(--ion-color-dark);
      }
    }
  }
}

.form-container ion-grid ion-col:has(ion-label) {
  align-content: end;
}

/* -- FAB buttons -- */
ion-fab {
  ion-fab-button[title] {
    position: relative;
  }

  ion-fab-button[title]::after {
    position: absolute;
    content: attr(title);
    z-index: 1;
    right: 55px;
    bottom: 4px;
    background-color: var(--ion-color-medium);
    padding: 9px;
    border-radius: 15px;
    color: white;
    box-shadow: 0 3px 5px -1px rgba(0,0,0,0.2), 0 6px 10px 0 rgba(0,0,0,0.14), 0 1px 18px 0 rgba(0,0,0,0.12);
  }

  ion-fab-button {
    .icon-secondary {
      position: absolute;
      left: 21px;
      top: 3px;
      font-size: 16px;
    }
  }
}

/* special case for sampling ratio: override the 'left' style, of placeholder field */
mat-sampling-ratio-field {
  .mat-form-field.with-prefix {

    &.mat-form-field-should-float {
      .mat-form-field-label-wrapper {
        left: 0;
      }
    }
    .mat-form-field-label-wrapper {
      left: 19px;
    }
  }
}

.popover-notifications {
  ion-avatar img,
  ion-avatar .avatar svg {
    //border-radius: 5px !important;
  }
}

/* -- Mat menu -- */

.mat-menu-panel {
  .mat-menu-item.activated {
    background-color: var(--ion-color-secondary100);
    color: var(--ion-color-secondary100-contrast);
  }
}

/* -- image gallery -- */

.gallery-container {
  .image-card {
    &.zoom-hover:hover {
      --img-scale: 0.8 !important;
    }
    .card-thumbnail {
      background-color: var(--ion-color-light);
    }
  }

  &.list {
    --img-max-height: 50vh;
  }
  &.mosaic {
    --img-max-height: 30vh;
  }
}



.mat-drawer-backdrop.mat-drawer-shown {
  background-color: rgba(0,0,0,0.2);
}

/* -- toolbar > segment as title (see observedLocations or landings page) -- */
app-toolbar ion-segment-button {
  &.ion-title {
    min-width: 150px;
    ion-label {
      text-transform: none;
      font-size: 20px;
      font-weight: 500;
      letter-spacing: 0.0125em;
    }
  }
}
