// --------------------------------------------------
// Import SUMARiS themes variables
// --------------------------------------------------
@import "theme.globals";
// --------------------------------------------------
// Import ngx-components theme
// --------------------------------------------------
@import "~@sumaris-net/ngx-components/src/theme/theme";
// --------------------------------------------------
// Import print style
// --------------------------------------------------
@import "print";

// --------------------------------------------------
// SUMARiS theme
// --------------------------------------------------
@import "mixins";

.mat-tab-fixed-content {
  .mat-tab-body-content {
    height: var(--mat-tab-body-content-height, 100%) !important;
    overflow: auto;
    & > .ng-star-inserted {
      height: var(--mat-tab-body-content-height, 100%);
    }
  }
}

mat-tab-group.mat-tab-disabled-visible .mat-tab-disabled {
  display: inherit;
}

.mat-table {
  .mat-row {
    overflow: hidden;
    /*FIXME not need anymore ?
    height: calc(min(var(--mat-row-max-height), 48px));
    */
  }

  .mat-header-row,
  .mat-row,
  .mat-footer-row {

    .mat-column-select {
      width: 50px; // Force to 50px, because sticky column must have fixed width
    }

    .mat-header-cell,
    .mat-cell,
    .mat-footer-cell {

      // Remove right border, of sticky columns
      &.mat-table-sticky-border-elem-left {
        border-right: 0 !important; // 1px solid #{$app-table-border-color};
      }
    }
  }

  .mat-header-row  .mat-header-cell .pmfm-details {
    margin-top: 4px;
    font-size: 90% !important;
  }
}

mat-form-field {
  .mat-form-field-buttons {
    width: 100%;
    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start;
    align-items: center;

    .mat-form-field-button {
      --flex-basis: calc(100% / var(--buttons-col-count, 4));
      flex: 0 1 var(--flex-basis);
      max-width: calc(min(var(--flex-basis), 150px));
      white-space: normal;
      padding: 0 2px;
      height: 40px;
      text-transform: capitalize; // Avoid uppercase text
    }
  }

  .fab-button-small {
    margin: 0 5px;
  }
}

.mat-toolbar, .mat-toolbar-single-row {
  background-color: #{$mat-toolbar-background-color};
  height: var(--mat-toolbar-height);
}


// Smaller title on xxs device
@media screen and (max-width: $screen-xxs-max) {
  ion-toolbar ion-title {
    font-size: 16px;
    padding-inline: 0;
  }
}

// Smaller title on xs device
@media screen and (min-width: $screen-xs) and (max-width: $screen-xs-max)  {
  ion-toolbar ion-title {
    font-size: 18px;
    padding-inline: 6px;
  }
}

// Mobile: change form labels style
@media screen and (max-width: $screen-sm-max) {
  form ion-col > ion-label.ion-float-center, form ion-col > ion-label.ion-float-end {
    font-weight: bold;
  }
}

ion-toast {
  &.secondary {
    --background: var(--ion-color-secondary);
    --color: var(--ion-color-primary);
    --button-color: var(--ion-color-tertiary);
  }
}

// Form buttons bar
app-form-buttons-bar {
  // Default width of form bar left buttons
  --form-buttons-bar-buttons-width: 400px;
}

// Measurement form
@media screen and (max-width: $screen-sm-max) {
  .measurements-form-padding-start {
    /* Add offset = icon width (24px) + margin (2*5px) */
    padding-inline-start: 34px;
  }
}

.form-container,
form.form-container {
  mat-form-field {
    ion-icon[matPrefix],
    mat-icon[matPrefix],
    .mat-form-field-prefix ion-icon,
    .mat-form-field-prefix .mat-icon {
      color: rgba(0, 0, 0, 0.57);
      fill: rgba(0, 0, 0, 0.57);
    }

    &.mat-focused {
      ion-icon[matPrefix],
      mat-icon[matPrefix],
      .mat-form-field-prefix ion-icon,
      .mat-form-field-prefix .mat-icon {
        color: var(--ion-color-dark);
        fill: var(--ion-color-dark);
      }
    }
  }
}

/* -- FAB buttons -- */
ion-fab {
  ion-fab-button[title] {
    position: relative;
  }

  ion-fab-button[title]::after {
    position: absolute;
    content: attr(title);
    z-index: 1;
    right: 55px;
    bottom: 4px;
    background-color: var(--ion-color-medium);
    padding: 9px;
    border-radius: 15px;
    color: white;
    box-shadow: 0 3px 5px -1px rgba(0,0,0,0.2), 0 6px 10px 0 rgba(0,0,0,0.14), 0 1px 18px 0 rgba(0,0,0,0.12);
  }

  ion-fab-button {
    .icon-secondary {
      position: absolute;
      left: 21px;
      top: 3px;
      font-size: 16px;
    }
  }
}

/* special case for sampling ratio: override the 'left' style, of placeholder field */
mat-sampling-ratio-field {
  .mat-form-field.with-prefix {

    &.mat-form-field-should-float {
      .mat-form-field-label-wrapper {
        left: 0;
      }
    }
    .mat-form-field-label-wrapper {
      left: 19px;
    }
  }
}

.popover-notifications {
  ion-avatar img,
  ion-avatar .avatar svg {
    //border-radius: 5px !important;
  }
}
